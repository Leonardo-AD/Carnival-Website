* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

:root {
    font-size: 62.5%;
    /* Removendo o padrão de 16px para 10px */

    --background-color: #F8F8FF;
    --primary-highlight-color: #6246EA;
    --secondary-highlight-color: #E45858;
    --text-color: #121214;
    --default-background-color: #FFFFFF;
    --border-color: #EAEAEA;
    --secondary-text-color: #7C7C8A;

    font-family: "Roboto";
}

/* Utility do TailWind para screen reader 
   Sendo utility eu posso colocá-lo em qualquer elemento
   Sem aparecer na tela, garantindo a acessibilidade
*/
.sr-only {
    position: absolute;
    width: .1rem;
    height: .1rem;
    padding: 0;
    margin: -.1rem;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

.btn {
    display: flex;
    justify-content: center;
    align-items: center;

    font-weight: 700;
    font-size: 1.4rem;
    line-height: 2.4rem;

    text-transform: uppercase;
    cursor: pointer;
    padding: .4rem 2.4rem;
    border-radius: .5rem;
}

.primary {
    background: var(--primary-highlight-color);
    color: var(--default-background-color);
    transition: background 200ms;
}

.primary:hover {
    background: #523DBE;
    color: var(--default-background-color);
}

.secondary {
    color: var(--primary-highlight-color);
}

.secondary:hover {
    background-color: var(--primary-highlight-color);
    color: var(--default-background-color);
}

body {
    font-size: 1.6rem;
    /* 16px de tamanho */
}

input, select, button {
    font-family: "Roboto";

    /* Remove todo o conteúdo css aplicado pelo browser */
    all: unset; 
}

header {
    min-height: 53.2rem;
    background-color: var(--background-color);

    position: relative;
    /* ::before e ::after agora serão absolutos em relação ao header e não a página */
    overflow: hidden;

    /* Centralizar e calcular corretamente os espaçamentos */
    display: grid;
    place-content: center;
}

/* Criando elemento que fica antes do conteúdo principal */
header::before {
    /* Todo elemento criado pelo css precisa de um content, neste caso está vazio */
    content: "";
    background-image: url("./assets/bg-header-top.svg");
    width: 40.7rem;
    height: 34.5rem;

    position: absolute;
    z-index: 0;
    top: 0;
    left: 0;
}

header::after {
    content: "";
    background-image: url("./assets/bg-header-bottom.svg");
    width: 41.4rem;
    height: 33rem;

    position: absolute;
    bottom: -1.2rem;
    right: 0;
}

header .content {
    width: fit-content;
    position: relative;
    z-index: 1;
}

header .content .top {
    text-align: center;
}

header p {
    font-weight: 500;
    line-height: 160%;
    letter-spacing: .1rem;

    text-transform: uppercase;
    color: var(--secondary-highlight-color);
}

header h1 {
    font-size: 4.8rem;
    line-height: 125%;
    color: var(--text-color);

    max-width: 64.7rem;
    margin: 1.8rem auto 0;
}

header h1 span {
    color: var(--primary-highlight-color);
}

form {
    margin-top: 4rem;
    display: flex;
    padding: 4rem;
    gap: 2.4rem;

    background: var(--default-background-color);
    border: .1rem solid var(--border-color);
    border-radius: 1rem;
}

.search-field {
    display: flex;
    align-items: center;
    gap: 1.2rem;

    background: var(--background-color);
    border-radius: .5rem;
    padding: 1.2rem .8rem 1.2rem 1.4rem;
}

.search-field i {
    color: var(--secondary-highlight-color);
    font-size: 2.4rem;
}

select, .select {
    position: relative;
}

select {
    z-index: 1;
}

.select i.ph-caret-down-light {
    position: absolute;
    right: 1.2rem;
    z-index: 0;
    color: var(--secondary-text-color);
}

input, select {
    color: var(--secondary-text-color);
    min-width: 29rem;
}

form button.btn {
    padding: 1.2rem 3.2rem;
}

main > .content { 
    /* main > .content Primeiro nível de main  */
    max-width: 120rem;
    margin: 10rem auto;
}


/* Resposividade */

main {
    padding-inline: 4rem;
}

@media (max-width: 1024px) {
    :root {
        font-size: 50%;
    }

    header::before {
        background-size: 30vw;
        background-repeat: no-repeat;
    }   
}

@media (max-width: 698px) {
    header .content {
        padding: 4rem;
    }

    header form {
        flex-direction: column;
    }
}


section.top {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

section.top .view {
    display: flex;
    padding: .8rem;
    border: .1rem solid var(--border-color);
    border-radius: .6rem;
    gap: .2rem;
}

section.cards {
    margin-top: 4rem;
    display: flex;
    flex-wrap: wrap;
    gap: 3.2rem;
    align-items: center;
    justify-content: center;
    width: 100%;
}

.card {
    background: var(--default-background-color);
    border: .1rem solid var(--border-color);
    border-radius: 1rem;
    max-width: 37rem;
    overflow: hidden;
}

.card .content {
    display: grid;
    gap: 1.6rem;
    padding: 1.6rem;
}

.card h3 {
    color: var(--text-color);
    font-size: 2rem;
    line-height: 140%;
}

.card p {
    opacity: .75;
}

.card .location {
    display: flex;
    align-items: center;
    gap: 1.2rem;
    opacity: .75;
}

.location i {
    color: var(--secondary-highlight-color);
    font-size: 2.4rem;
    opacity: 1;
}
